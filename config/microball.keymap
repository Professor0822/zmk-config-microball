#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 LANGUAGE_2>;
            key-positions = <25 24>;
        };

        double_quotation {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <14 13>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        MOUSE_MODE {
            bindings = <&to 4>;
            key-positions = <19 18>;
        };

        MOUSE_MODE2 {
            bindings = <&to 0>;
            key-positions = <20 19>;
        };

        lang2 {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <26 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        press_kakko: press_kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(ASTRK) &kp LEFT_PARENTHESIS>;
            label = "PRESS_KAKKO";
        };

        PCPass: PCPass {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp HASH &kp DOLLAR &kp LS(P) &kp R &kp O &kp F &kp E &kp S &kp S &kp O &kp R &kp N0 &kp N8 &kp N2 &kp N2>;
            label = "PCPASS";
        };

        Mail_MK: Mail_MK {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp M &kp I &kp S &kp A &kp W &kp A &kp DOT &kp K &kp O &kp LEFT_BRACKET &kp J &kp C &kp I &kp T &kp Y &kp DOT &kp M &kp A &kp E &kp D &kp A &kp DOT &kp C &kp O &kp DOT &kp J &kp P>;
            label = "MAIL_MK";
        };

        Open_Exproler: Open_Exproler {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_WIN &kp E>;
            label = "OPEN_EXPROLER";
        };

        Ctrl_Alt_Del: Ctrl_Alt_Del {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_press>;

            label = "CTRL_ALT_DEL";
        };
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt Q ESCAPE      &kp W         &kp E         &kp R        &kp T                                                  &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S         &kp D         &kp F        &kp G        &mkp MB3         &press_kakko             &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V        &kp B        &lt 1 COLON      &kp LS(INTERNATIONAL_1)  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&mt LCTRL LCTRL   &kp LEFT_WIN  &kp LEFT_ALT  &lt 3 LANG1  &lt 2 SPACE  &lt 4 LANG2      &kp BACKSPACE            &lt 1 ENTER                             &lt 6 DELETE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        NUM {
            bindings = <
&kp ESCAPE                 &kp SEMICOLON     &kp ASTERISK  &kp SLASH   &kp EXCLAMATION                                            &kp LS(MINUS)   &kp N7        &kp N8        &kp N9        &kp LS(ASTRK)
&kp TAB                    &kp LS(NUMBER_6)  &kp MINUS     &kp COLON   &kp PERIOD                &mkp MB3          &kp MINUS      &kp LS(INT_RO)  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp LEFT_PARENTHESIS
&mt LEFT_SHIFT LEFT_SHIFT  &kp LEFT_BRACKET  &kp HASH      &kp DOLLAR  &kp LS(NON_US_BACKSLASH)  &kp ASTERISK      &kp PLUS       &kp N0          &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp QUESTION
&trans                     &trans            &trans        &trans      &trans                    &trans            &kp BACKSPACE  &kp ENTER                                                 &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans          &kp UP_ARROW  &trans           &PCPass
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT_ARROW  &Mail_MK
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans          &trans        &trans           &Open_Exproler
&trans          &kp LEFT_WIN            &trans          &trans                   &trans   &trans      &trans  &trans                                                 &kp LC(LA(LS(DEL)))
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
